#!/usr/bin/ksh93

# Using the excellent resource https://www.ibm.com/developerworks/aix/library/au-aix-nim-cheat-sheet/index.html
# for layout and initial setup of NIM master

# Requirements
# The system being backed up must be an existing NIM client.
# The backup should be called with the NIM machine name
# Depending on space, there should be at most two mksysb/spot resources for each system at any given time.
# Errors should be promoted to alerts.

DATE="$(date '+%Y.%m%d_%a')"
#DATE=$(date +%m%d%Y)
NIM="/usr/sbin/nim"
NIM_VG=${NIM_VG:-nimvg}
NIM_BASE=${NIM_BASE:-/nim}
NIM_SPOT=${NIM_SPOT:-${NIM_BASE}/spot}
NIM_MKSYSB_DIR=${NIM_MKSYSB_DIR:-${NIM_BASE}/mksysb}
NIM_OSVERS=${NIM_OSVERS:-"7100 7200"}
typeset -A NIM_OSVER_LIST=$(echo "${NIM_OSVERS}")


##################################################
# Initialize NIM volume group information
# Globals:
#   NIM_VG
# Arguments:
#   None
# Returns:
#   Array nim_vg_info
#       nim_vg_info[NIM_VG].pp_size
#       nim_vg_info[NIM_VG].pp_free
##################################################
vginfo()
{
    typeset -A vginfo
    pp_size=$(lsvg ${NIM_VG} | grep "PP SIZE" | awk 'BEGIN{FS=":"} {print$3}' | awk 'BEGIN{FS=" "} {print $1}')
    pp_free=$(lsvg ${NIM_VG} | grep "FREE PP" | awk 'BEGIN{FS=":"} {print $3}'| awk 'BEGIN{FS=" "} {print $1}')
    vginfo+=(
                ["${NIM_VG}"]=(pp_size="${pp_size}" pp_free="${pp_free}")
            )
}

usage()
{
	print -u 2 "${0} -c"
}



function NIM_EPOCH.get
{
	.sh.value=$(date +%s)
}

nimsysb()
{
  set -x
  typeset CLIENT_MKSYSB_NAME="${NIM_CLIENT}_mk_${DATE}"
  typeset CLIENT_SPOT_NAME="${NIM_CLIENT}_sp_${DATE}"

  print -u 2 "Creating a new mksysb for client: ${NIM_CLIENT}"
  typeset -i NIMSYSB_RC=0
  NIMSYSB_OUT=$(exec ${NIM} -o define -t mksysb -a server=master -a location=${NIM_MKSYSB_DIR}/${CLIENT_MKSYSB_NAME} -a mk_image=yes -a mksysb_flags=Te -a source=${NIM_CLIENT} ${CLIENT_MKSYSB_NAME})

  NIMSYSB_RC=$(echo $?)

  if [[ ${NIMSYSB_RC} -eq 0 ]]
  then
	  print -u 2 "Successfully created the mksysb"
  else
	  print -u 2 "Error creating the mksysb"
  fi

}

main() 
{
  typeset TRUE="1"
  typeset FALSE="0"
  typeset NIM_CLIENT=""
  typeset LIST_MKSYSB="${FALSE}"
  typeset VERSION="1.0"

  while getopts ":c:ldv" OPTION
  do
  	case "${OPTION}" in
  		'c') NIM_CLIENT="${OPTARG}";;
  		'l') LIST_MKSYSB="${TRUE}";;
  		'd') DEBUG="${TRUE}";;
  		'v') VERBOSE="${TRUE}";;
  		'?') usage "${0}" && return 1;;
  		':') usage "${0}" && return 1;;
  	esac
  done

  trap "usage ${0}" EXIT
  if [[ "_${NIM_CLIENT}" = "_" ]]
  then
	  print -u 2 "ERROR: Must specify the NIM client name"
	  return 2
  fi

  print "${NIM_CLIENT}_mk_${DATE}"
  

  (( DEBUG == TRUE )) && set -x
  (( VERBOSE == TRUE )) && print -u 2 "#Program:..........: ${0}"
  (( VERBOSE == TRUE )) && print -u 2 "#Version:..........: ${VERSION}"
  (( VERBOSE == TRUE )) && print -u 2 "#NIM_CLIENT:.......: ${NIM_CLIENT}"

}

main "${@}"
